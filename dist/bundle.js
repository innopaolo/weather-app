(()=>{"use strict";var n,e,t,o,r={426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),A=t.n(i),a=t(667),s=t.n(a),c=new URL(t(578),t.b),l=A()(r());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Mukta:wght@200;500;800&display=swap);"]);var d=s()(c);l.push([n.id,`* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    position: relative;\n    background-image: url(${d});\n    background-size: cover;\n    background-repeat: no-repeat;\n    height: 130vh;\n    font-family: 'Mukta', sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\n\n/* Search bar */\n.search-group {\n    position: relative;\n    padding: 15px 0 0;\n    margin: 1.6rem 2rem;\n    width: 20ch;\n}\n\n@media (max-width: 500px) {\n    .search-group {\n        width: 50%;\n    }\n}\n\n\n.search-field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #9b9b9b;\n    outline: 0;\n    font-size: 1.3rem;\n    color: #fff;\n    padding: 7px 0 0;\n    background: transparent;\n    transition: border-color 0.2s;\n}\n\n.search-field::placeholder {\n    color: transparent;\n}\n\n.search-field:placeholder-shown ~ .search-label {\n    font-size: 1.3rem;\n    font-weight: 800;\n    cursor: text;\n    top: 26px;\n  }\n  \n.search-label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n}\n  \n.search-field:focus ~ .search-label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #31abdf;\n    font-weight: 700;\n}\n\n.search-field:focus {\n    padding-bottom: 1px;\n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #0c557f, #31abdf);\n    border-image-slice: 1;\n}\n\n/* Weather info box */\nmain {\n    align-self: flex-end;\n    display: none;\n}\n\n\n.info {\n    background: linear-gradient(to right, #078fde, #53c8fa);\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 1.6rem 3rem;\n    font-size: 3vw;\n    /* Linear gradient background will show through transparent text */\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n}\n\n.condition {\n  line-height: 1.5em;\n  font-size: 1.4em;\n  font-weight: 200;\n  color: antiquewhite;\n}\n\n.location {\n    line-height: 2.4rem;\n}\n\n.weather-details {\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.degrees {\n    font-size: 6em;\n    font-weight: 800;\n    color: antiquewhite;\n}\n.degrees::after,\n.feels-like::after {\n    content: '℃';\n    font-size: 0.3em;\n    vertical-align: super;\n    margin-top: 1em;\n    color: antiquewhite;\n    margin-right: 10px;\n}\n\n.extra-info {\n    align-self: center;\n    border-left: 3px solid #9b9b9b;\n    padding-left: 0.5em;\n}\n\n.feels-like::after {\n    font-size: 0.5em;\n}\n\n@media (max-width: 900px) {\n    main {\n       width: 100%;\n   }\n\n   .info {\n    font-size: 4.5vw;\n   }\n\n   .extra-info {\n        margin-left: 1rem;\n   }\n}\n\n@media (max-width: 490px) {\n    .info {\n        gap: 2px;\n        font-size: 6vw;\n    }\n\n    .location {\n        line-height: 2.8rem;\n        width: 120%;\n    }\n\n    .degrees {\n        font-size: 8em;\n        line-height: 0.8em;\n    }\n\n    .weather-details {\n        flex-direction: column;\n    }\n\n    .extra-info {\n        margin-top: 2rem;\n    }\n}\n\n.error-message {\n    color: rgb(235, 81, 81);\n}\n\n/* Toggle switch for fahrenheit/celisus */\n.switch {\n    position: absolute;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    top: 1rem;\n    right: 1rem;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider:before {\n    position: absolute;\n    content: "℉";\n    text-align: center;\n    color: #b7b1b1;\n    font-size: 18px;\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\ninput:checked + .slider {\n    background-color: #2196F3;\n}\n\ninput:focus + .slider {\n    box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    transform: translateX(26px);\n    color: black;\n}\n\n.slider.round {\n    border-radius: 34px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n\n.weather-values {\n    color: antiquewhite;\n}\n\n/* Loading component while data is fetched */\n.loading {\n    position: absolute;\n    top: 50%;\n    right: 25%;\n}\n\n.loader {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    position: relative;\n    animation: rotate 1s linear infinite\n}\n.loader::before {\n    content: "";\n    box-sizing: border-box;\n    position: absolute;\n    inset: 0px;\n    border-radius: 50%;\n    border: 5px solid #FFF;\n    animation: loadingCircle 2s linear infinite ;\n}\n\n@keyframes rotate {\n    100%   {transform: rotate(360deg)}\n}\n\n@keyframes loadingCircle {\n    0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n    25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n    50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n    75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n    100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n}  \n\nfooter {\n   position: absolute;\n   bottom:  0;\n   left: 40%;\n   color: white; \n}\nfooter a {\n    color: white;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Mukta:wght@200;500;800&display=swap');\n\n\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    position: relative;\n    background-image: url('./assets/weatherBG.jpg');\n    background-size: cover;\n    background-repeat: no-repeat;\n    height: 130vh;\n    font-family: 'Mukta', sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\n\n/* Search bar */\n.search-group {\n    position: relative;\n    padding: 15px 0 0;\n    margin: 1.6rem 2rem;\n    width: 20ch;\n}\n\n@media (max-width: 500px) {\n    .search-group {\n        width: 50%;\n    }\n}\n\n\n.search-field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #9b9b9b;\n    outline: 0;\n    font-size: 1.3rem;\n    color: #fff;\n    padding: 7px 0 0;\n    background: transparent;\n    transition: border-color 0.2s;\n}\n\n.search-field::placeholder {\n    color: transparent;\n}\n\n.search-field:placeholder-shown ~ .search-label {\n    font-size: 1.3rem;\n    font-weight: 800;\n    cursor: text;\n    top: 26px;\n  }\n  \n.search-label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n}\n  \n.search-field:focus ~ .search-label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #31abdf;\n    font-weight: 700;\n}\n\n.search-field:focus {\n    padding-bottom: 1px;\n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #0c557f, #31abdf);\n    border-image-slice: 1;\n}\n\n/* Weather info box */\nmain {\n    align-self: flex-end;\n    display: none;\n}\n\n\n.info {\n    background: linear-gradient(to right, #078fde, #53c8fa);\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 1.6rem 3rem;\n    font-size: 3vw;\n    /* Linear gradient background will show through transparent text */\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n}\n\n.condition {\n  line-height: 1.5em;\n  font-size: 1.4em;\n  font-weight: 200;\n  color: antiquewhite;\n}\n\n.location {\n    line-height: 2.4rem;\n}\n\n.weather-details {\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.degrees {\n    font-size: 6em;\n    font-weight: 800;\n    color: antiquewhite;\n}\n.degrees::after,\n.feels-like::after {\n    content: '℃';\n    font-size: 0.3em;\n    vertical-align: super;\n    margin-top: 1em;\n    color: antiquewhite;\n    margin-right: 10px;\n}\n\n.extra-info {\n    align-self: center;\n    border-left: 3px solid #9b9b9b;\n    padding-left: 0.5em;\n}\n\n.feels-like::after {\n    font-size: 0.5em;\n}\n\n@media (max-width: 900px) {\n    main {\n       width: 100%;\n   }\n\n   .info {\n    font-size: 4.5vw;\n   }\n\n   .extra-info {\n        margin-left: 1rem;\n   }\n}\n\n@media (max-width: 490px) {\n    .info {\n        gap: 2px;\n        font-size: 6vw;\n    }\n\n    .location {\n        line-height: 2.8rem;\n        width: 120%;\n    }\n\n    .degrees {\n        font-size: 8em;\n        line-height: 0.8em;\n    }\n\n    .weather-details {\n        flex-direction: column;\n    }\n\n    .extra-info {\n        margin-top: 2rem;\n    }\n}\n\n.error-message {\n    color: rgb(235, 81, 81);\n}\n\n/* Toggle switch for fahrenheit/celisus */\n.switch {\n    position: absolute;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    top: 1rem;\n    right: 1rem;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider:before {\n    position: absolute;\n    content: \"℉\";\n    text-align: center;\n    color: #b7b1b1;\n    font-size: 18px;\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\ninput:checked + .slider {\n    background-color: #2196F3;\n}\n\ninput:focus + .slider {\n    box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    transform: translateX(26px);\n    color: black;\n}\n\n.slider.round {\n    border-radius: 34px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n\n.weather-values {\n    color: antiquewhite;\n}\n\n/* Loading component while data is fetched */\n.loading {\n    position: absolute;\n    top: 50%;\n    right: 25%;\n}\n\n.loader {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    position: relative;\n    animation: rotate 1s linear infinite\n}\n.loader::before {\n    content: \"\";\n    box-sizing: border-box;\n    position: absolute;\n    inset: 0px;\n    border-radius: 50%;\n    border: 5px solid #FFF;\n    animation: loadingCircle 2s linear infinite ;\n}\n\n@keyframes rotate {\n    100%   {transform: rotate(360deg)}\n}\n\n@keyframes loadingCircle {\n    0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n    25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n    50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n    75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n    100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n}  \n\nfooter {\n   position: absolute;\n   bottom:  0;\n   left: 40%;\n   color: white; \n}\nfooter a {\n    color: white;\n}"],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&A[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},654:(n,e,t)=>{var o=t(379),r=t.n(o),i=t(795),A=t.n(i),a=t(569),s=t.n(a),c=t(565),l=t.n(c),d=t(216),p=t.n(d),u=t(589),f=t.n(u),h=t(426),C={};C.styleTagTransform=f(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=p(),r()(h.Z,C),h.Z&&h.Z.locals&&h.Z.locals},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],c=o.base?s[0]+o.base:s[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:f,references:1})}A.push(d)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=o(n,r),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},138:(n,e,t)=>{t.a(n,(async(n,e)=>{try{t(654);var o=t(194),r=t(797),i=t(162);const n=await o.w(),A="ce8d565b4f7746cb970133312231609",a=i.ae(A,n);i.QS(a,o.p,r.ch),window.addEventListener("keydown",(n=>{if("Enter"===n.key){r.Z7.style.display="block",r.DH.style.display="none";const n=i.ae(A,r.o7);i.QS(n,o.p,r.ch)}})),r.Z6(i.mZ,i.Up),e()}catch(n){e(n)}}),1)},194:(n,e,t)=>{function o(n){return fetch(n).then((n=>n.json())).then((n=>n)).catch((n=>{console.error("Error fetching weather data: ",n)}))}function r(){return fetch("https://www.geoplugin.net/json.gp").then((n=>n.json())).then((n=>n.geoplugin_city)).catch((n=>{console.error("Error fetching location: ",n)}))}t.d(e,{p:()=>o,w:()=>r})},797:(n,e,t)=>{t.d(e,{DH:()=>c,Z6:()=>h,Z7:()=>l,ch:()=>d,o7:()=>u});const o=document.querySelector(".condition"),r=document.querySelector(".location"),i=document.querySelector(".degrees"),A=document.querySelector(".feels-like"),a=document.querySelector(".wind-mph"),s=document.querySelector(".humidity"),c=document.querySelector("main"),l=document.getElementById("loading");function d(n,e,t,c,l,d){o.textContent=n,r.textContent=e,i.textContent=t,A.innerHTML=`FEELS LIKE: <span style="color:antiquewhite;">${c}</span>`,a.innerHTML=`WIND: <span style="color:antiquewhite;">${l} m/h</span>`,s.innerHTML=`HUMIDITY: <span style="color:antiquewhite;">${d}%</span>`}const p=document.getElementById("city");let u;p.addEventListener("keydown",(n=>{"Enter"===n.key&&(u=p.value)}));let f=!1;function h(n,e){document.getElementById("convert").addEventListener("click",(()=>{f=!f;const t=parseFloat(i.textContent),o=parseFloat(A.textContent.split(" ")[2]);f?(i.textContent=n(t),A.innerHTML=`FEELS LIKE: <span style="color:antiquewhite;">${n(o)}</span>`):(i.textContent=e(t),A.innerHTML=`FEELS LIKE: <span style="color:antiquewhite;">${e(o)}</span>`)}))}},162:(n,e,t)=>{t.d(e,{QS:()=>A,Up:()=>s,ae:()=>r,mZ:()=>a});var o=t(797);function r(n,e){return`https://api.weatherapi.com/v1/current.json?key=${n}&q=${e}`}const i=document.querySelector(".error-message");async function A(n,e,t){try{const r=await e(n),i=`${r.location.name}, ${r.location.country}`;t(r.current.condition.text,i,r.current.temp_c,r.current.feelslike_c,r.current.wind_mph,r.current.humidity),setTimeout((()=>{o.Z7.style.display="none",o.DH.style.display="block"}),1e3)}catch(n){i.textContent="Found no match!",setTimeout((()=>{i.textContent=""}),3e3),o.DH.style.display="none",o.Z7.style.display="none"}}function a(n){const e=(9*n/5+32).toFixed(1);return e.endsWith(".0")?e.split(".")[0]:e}function s(n){const e=(5*(n-32)/9).toFixed(1);return e.endsWith(".0")?e.split(".")[0]:e}},578:(n,e,t)=>{n.exports=t.p+"assets/weatherBG.jpg"}},i={};function A(n){var e=i[n];if(void 0!==e)return e.exports;var t=i[n]={id:n,exports:{}};return r[n](t,t.exports,A),t.exports}A.m=r,n="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",e="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",o=n=>{n&&n.d<1&&(n.d=1,n.forEach((n=>n.r--)),n.forEach((n=>n.r--?n.r++:n())))},A.a=(r,i,A)=>{var a;A&&((a=[]).d=-1);var s,c,l,d=new Set,p=r.exports,u=new Promise(((n,e)=>{l=e,c=n}));u[e]=p,u[n]=n=>(a&&n(a),d.forEach(n),u.catch((n=>{}))),r.exports=u,i((r=>{var i;s=(r=>r.map((r=>{if(null!==r&&"object"==typeof r){if(r[n])return r;if(r.then){var i=[];i.d=0,r.then((n=>{A[e]=n,o(i)}),(n=>{A[t]=n,o(i)}));var A={};return A[n]=n=>n(i),A}}var a={};return a[n]=n=>{},a[e]=r,a})))(r);var A=()=>s.map((n=>{if(n[t])throw n[t];return n[e]})),c=new Promise((e=>{(i=()=>e(A)).r=0;var t=n=>n!==a&&!d.has(n)&&(d.add(n),n&&!n.d&&(i.r++,n.push(i)));s.map((e=>e[n](t)))}));return i.r?c:A()}),(n=>(n?l(u[t]=n):c(p),o(a)))),a&&a.d<0&&(a.d=0)},A.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return A.d(e,{a:e}),e},A.d=(n,e)=>{for(var t in e)A.o(e,t)&&!A.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},A.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),A.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;A.g.importScripts&&(n=A.g.location+"");var e=A.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&!n;)n=t[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),A.p=n})(),A.b=document.baseURI||self.location.href,A.nc=void 0,A(138)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,